{"version":3,"file":"static/js/910.e3374f22.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/MoviesView.jsx","shared/api/api.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d"],"sourcesContent":["import {Link, useLocation} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport s from \"./MoviesList.module.css\";\n\nconst MoviesList = ({itemsData}) => {\n    const location = useLocation(); // location - інформація про сторінку з якої виводиться список фільмів\n\n    return (\n    <ul className={s.gallery}>\n        {itemsData.map(({id, backdrop_path, original_name, original_title}) => (\n        <li key={id} className={s.galleryItem}>\n            <img src={`https://image.tmdb.org/t/p/w500${backdrop_path}`} alt={original_name || original_title} className={s.image} />\n            <div className={s.titleBlock}>\n            <Link state={{from: location}} to={`/movies/${id}`} className={s.movieName}>{original_name || original_title}</Link>\n            </div>\n        </li>\n        ))}\n    </ul>\n    )\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n    itemsData: [],\n}\n\nMoviesList.propTypes = {\n    itemsData: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        backdrop_path: PropTypes.string,\n        original_name: PropTypes.string,\n        original_title: PropTypes.string,\n        })),\n}","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"buttonLabel\":\"SearchBar_buttonLabel__HaGuZ\",\"container\":\"SearchBar_container__xwaer\",\"buttonLoad\":\"SearchBar_buttonLoad__lkTwf\",\"icon\":\"SearchBar_icon__EfDZn\"};","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\n\nimport s from \"./SearchBar.module.css\";\n\nconst initialState = {\n    id: \"\",\n    search: \"\",\n}\n\nconst Searchbar = ({onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n    \n    const handleInputChange = event => {\n        const { name, value } = event.currentTarget;\n        let id = nanoid();\n        setState(prevState => ({\n            ...prevState,\n            [name]: value,\n            id: id,\n        }))\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    }\n\n    const {id, search} = state;\n    return (\n    <header className={s.searchbar}>\n        <form onSubmit={handleSubmit} className={s.form}>\n            <button type=\"submit\" className={s.button}>\n            <FontAwesomeIcon className={s.icon} icon={faMagnifyingGlass}/>\n            </button>\n\n            <input\n                id={id}\n                name=\"search\"\n                className={s.input}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                value={search}\n                onChange={handleInputChange}\n            />\n        </form>\n    </header>\n    )\n}\n\n\nexport default Searchbar;\n\nSearchbar.defaultProps = {\n    onSubmit: () => {},\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func,\n}","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMoviesBySearch } from \"../../src/shared/api/api\";\n\nimport MoviesList from \"../components/MoviesList/MoviesList\"\nimport Loader from \"../components/Loader/Loader\";\nimport Searchbar from \"../components/SearchBar/SearchBar\"\nimport s from \"../components/MoviesList/MoviesList.module.css\"\n\nimport PropTypes from 'prop-types';\n\nconst MoviesView = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(1);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const q = searchParams.get('search');\n\n    useEffect(()=> {\n      const fetchMovies = async () =>  {        \n          try {\n              setLoading(true);\n              const data = await getMoviesBySearch(page, q);\n              setItems(prevItems => [...prevItems, ...data.results])\n          } catch (error) {\n              setError(error);\n          }\n          finally {\n              setLoading(false);\n          }\n      } \n      if(q) {\n          fetchMovies()\n      }\n  }, [page, q]);\n\n  const formSubmitHandler = searchData => {\n    const params = Object.fromEntries([...searchParams]);\n    const search = searchData.search;\n    setSearchParams({...params, search})\n    setPage(1)\n    if (search !== q) {\n        setItems([])\n    } \n    if (page > 1 && search === q && loading === false) {\n        setItems([])\n    }\n};\n  const loadMore = () => setPage(page + 1);\n\n  const isMoviesPresent = Boolean(items.length);\n\n  let noResult = \"\";\n  if(items.length === 0 && q === null && !loading) {\n      noResult = true;\n  }\n\n    return (\n      <div>\n        <Searchbar onSubmit={formSubmitHandler}/>\n        {loading && <Loader/>}\n        <MoviesList itemsData={items}/>\n        {isMoviesPresent && <button className={s.button} onClick={loadMore}>load more</button>}\n        {!noResult && <p className={s.warning}>Sorry, we didn't find any movies for your search: {q}</p>}\n        {error && <p>Failed to upload movies.</p>}\n      </div>\n    );\n  };\n\nexport default MoviesView;\n\nMoviesView.defaultProps = {\n  data: {},\n  fetchMovies: () => {},\n  getMoviesBySearch: () => {},\n  formSubmitHandler: () => {},\n}\n\nMoviesView.propTypes = {\n  fetchMovies: PropTypes.func,\n  getMoviesBySearch: PropTypes.func,\n  formSubmitHandler: PropTypes.func,\n  data: PropTypes.shape({\n      search: PropTypes.string,\n      id: PropTypes.string,\n  }),\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'd2b2f291667f079bc8fdb4687806371b',\n    }\n});\n\nexport const getMovies = async(page = 1) => {\n    const {data} = await instance.get('trending/all/day', {\n        params: {\n            page,\n        }\n    });\n    return data;\n};\n\nexport const getMoviesBySearch = async(page = 1, query) => {\n    const {data} = await instance.get('/search/movie', {\n        params: {\n            page,\n            query,\n        }\n    });\n    return data;\n};\n\nexport const getMoviesById = async(id) => {\n    const {data} = await instance.get(`/movie/${id}`, {\n        params: {\n            language: \"en-US\",\n        }\n    });\n    return data;\n};\n\nexport const getMoviesByCredits = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/credits`, {\n        params: {\n            language: \"en-US\",\n        }\n    });\n    return data;\n};\n\nexport const getMoviesByReviews = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`, {\n        params: {\n            language: \"en-US\",\n        }\n    });\n    return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"MoviesList_gallery__Nw0Bb\",\"galleryItem\":\"MoviesList_galleryItem__FCIt7\",\"image\":\"MoviesList_image__oyOXu\",\"movieName\":\"MoviesList_movieName__HnGim\",\"titleBlock\":\"MoviesList_titleBlock__iDQ5U\",\"title\":\"MoviesList_title__PB2c8\",\"button\":\"MoviesList_button__Ja2YP\",\"warning\":\"MoviesList_warning__qo+rj\"};"],"names":["MoviesList","itemsData","location","useLocation","className","s","map","id","backdrop_path","original_name","original_title","src","alt","state","from","to","defaultProps","initialState","search","Searchbar","onSubmit","useState","setState","e","preventDefault","type","icon","faMagnifyingGlass","name","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","nanoid","prevState","MoviesView","items","setItems","loading","setLoading","error","setError","page","setPage","useSearchParams","searchParams","setSearchParams","q","get","useEffect","fetchMovies","getMoviesBySearch","data","prevItems","results","isMoviesPresent","Boolean","length","noResult","searchData","params","Object","fromEntries","Loader","onClick","formSubmitHandler","instance","axios","baseURL","api_key","getMovies","query","getMoviesById","language","getMoviesByCredits","getMoviesByReviews"],"sourceRoot":""}