{"version":3,"file":"static/js/910.4bd8d79f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/MoviesView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"buttonLabel\":\"SearchBar_buttonLabel__HaGuZ\",\"container\":\"SearchBar_container__xwaer\",\"buttonLoad\":\"SearchBar_buttonLoad__lkTwf\",\"icon\":\"SearchBar_icon__EfDZn\"};","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\n\nimport s from \"./SearchBar.module.css\";\n\nconst initialState = {\n    id: \"\",\n    search: \"\",\n}\n\nconst Searchbar = ({onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n    \n    const handleInputChange = event => {\n        const { name, value } = event.currentTarget;\n        let id = nanoid();\n        setState(prevState => ({\n            ...prevState,\n            [name]: value,\n            id: id,\n        }))\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    }\n\n    const {id, search} = state;\n    return (\n    <header className={s.searchbar}>\n        <form onSubmit={handleSubmit} className={s.form}>\n            <button type=\"submit\" className={s.button}>\n            <FontAwesomeIcon className={s.icon} icon={faMagnifyingGlass}/>\n            </button>\n\n            <input\n                id={id}\n                name=\"search\"\n                className={s.input}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                value={search}\n                onChange={handleInputChange}\n            />\n        </form>\n    </header>\n    )\n}\n\n\nexport default Searchbar;\n\nSearchbar.defaultProps = {\n    onSubmit: () => {},\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func,\n}","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMoviesBySearch } from \"../../src/shared/api/api\";\n\nimport MoviesList from \"../components/MoviesList/MoviesList\"\nimport Loader from \"../components/Loader/Loader\";\nimport Searchbar from \"../components/SearchBar/SearchBar\"\nimport s from \"../components/MoviesList/MoviesList.module.css\"\n\nimport PropTypes from 'prop-types';\n\nconst MoviesView = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(1);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const q = searchParams.get('search');\n\n    useEffect(()=> {\n      const fetchMovies = async () =>  {        \n          try {\n              setLoading(true);\n              const data = await getMoviesBySearch(page, q);\n              setItems(prevItems => [...prevItems, ...data.results])\n          } catch (error) {\n              setError(error);\n          }\n          finally {\n              setLoading(false);\n          }\n      } \n      if(q) {\n          fetchMovies()\n      }\n  }, [page, q]);\n\n  const formSubmitHandler = searchData => {\n    const params = Object.fromEntries([...searchParams]);\n    const search = searchData.search;\n    setSearchParams({...params, search})\n    setPage(1)\n    if (search !== q) {\n        setItems([])\n    } \n    if (page > 1 && search === q && loading === false) {\n        setItems([])\n    }\n};\n  const loadMore = () => setPage(page + 1);\n\n  const isMoviesPresent = Boolean(items.length);\n\n  let noResult = \"\";\n  if(items.length === 0 && q === null && !loading) {\n      noResult = true;\n  }\n\n    return (\n      <div>\n        <Searchbar onSubmit={formSubmitHandler}/>\n        {loading && <Loader/>}\n        <MoviesList itemsData={items}/>\n        {isMoviesPresent && <button className={s.button} onClick={loadMore}>load more</button>}\n        {!noResult && <p className={s.warning}>Sorry, we didn't find any movies for your search: {q}</p>}\n        {error && <p>Failed to upload movies.</p>}\n      </div>\n    );\n  };\n\nexport default MoviesView;\n\nMoviesView.defaultProps = {\n  data: {},\n  fetchMovies: () => {},\n  getMoviesBySearch: () => {},\n  formSubmitHandler: () => {},\n}\n\nMoviesView.propTypes = {\n  fetchMovies: PropTypes.func,\n  getMoviesBySearch: PropTypes.func,\n  formSubmitHandler: PropTypes.func,\n  data: PropTypes.shape({\n      search: PropTypes.string,\n      id: PropTypes.string,\n  }),\n}"],"names":["initialState","id","search","Searchbar","onSubmit","useState","state","setState","className","s","e","preventDefault","type","icon","faMagnifyingGlass","name","autoComplete","autoFocus","placeholder","value","onChange","event","currentTarget","nanoid","prevState","defaultProps","MoviesView","items","setItems","loading","setLoading","error","setError","page","setPage","useSearchParams","searchParams","setSearchParams","q","get","useEffect","fetchMovies","getMoviesBySearch","data","prevItems","results","isMoviesPresent","Boolean","length","noResult","searchData","params","Object","fromEntries","Loader","MoviesList","itemsData","onClick","formSubmitHandler"],"sourceRoot":""}