{"version":3,"file":"static/js/94.0dd650fd.chunk.js","mappings":"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","sources":["components/MoviesCard/MoviesCard.jsx","pages/MovieDetailsView.jsx","shared/api/api.js","webpack://react-homework-template/./src/components/MoviesCard/MoviesCard.module.css?07cf"],"sourcesContent":["import PropTypes from 'prop-types';\nimport s from \"./MoviesCard.module.css\"\n\nconst MoviesCard = ({itemsData}) => {\n\n    return (\n        <ul className={s.container}>\n        {itemsData.map(({id, poster_path, original_name, original_title, release_date, overview, genres, vote_average}) => (\n        <li key={id} className={s.movieDetail}>\n            <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={original_name || original_title} className={s.img} />\n            <div className={s.movieDetailList}>\n            <h2>{original_name || original_title}</h2>\n            <h3>Release date: <span className={s.text}>{`${release_date}`}</span></h3>\n            <h3>Vote average: <span className={s.text}>{vote_average}</span></h3>\n            <h3>Owerview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul>\n                {genres.map(({id, name}) => (\n                <li key={id}>\n                    <p>{name}</p>\n                </li>\n                ))}\n            </ul>\n            </div>\n        </li>\n        ))}\n    </ul>\n    )\n}\n\nexport default MoviesCard;\n\nMoviesCard.defaultProps = {\n    itemsData: [],\n}\n\nMoviesCard.propTypes = {\n    onClick: PropTypes.func,\n    itemsData: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        poster_path: PropTypes.string,\n        original_name: PropTypes.string,\n        original_title: PropTypes.string,\n        release_date: PropTypes.string,\n        overview: PropTypes.string,\n    })),\n}","import Loader from \"components/Loader/Loader\";\nimport MoviesCard from \"../components/MoviesCard/MoviesCard\"\nimport {useState, useEffect} from \"react\";\nimport {Link, useParams, useNavigate, Outlet, useLocation} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport s from \"../components/MoviesCard/MoviesCard.module.css\"\n\nimport { getMoviesById } from \"../shared/api/api\";\n\nconst MovieDetailsView = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const {id} = useParams();\n\n    const navigate = useNavigate();\n\n    const location = useLocation();\n\n    const from = location.state?.from || \"/movies\";\n\n    const goBack = () => navigate(from);\n\n    useEffect(()=> {\n        const fetchMovies = async () =>  {        \n            try {\n                setLoading(true);\n                const data = await getMoviesById(id);\n                setItems(prevItems => [...prevItems, data])\n            } catch (error) {\n                setError(error);\n            }\n            finally {\n                setLoading(false);\n            }\n        } \n        if(id) {\n            fetchMovies()\n        }\n    }, [id]);\n\n    let castLink = \"\";\n    let reviewsLink = \"\";\n    if(location.pathname === `/movies/${id}/`) {\n        castLink = `/movies/${id}/cast`;\n        reviewsLink = `/movies/${id}/reviews`;\n    } else {\n        castLink = `/movies/${id}/`\n        reviewsLink = `/movies/${id}/`;\n    };\n\n    return (\n        <div className={s.container}>\n            <button className={s.button} onClick={goBack}>Go back</button>\n            {loading && <Loader className={s.loader}/>}\n            <MoviesCard itemsData={items}/>\n            {items && (<>\n                <Link className={s.outlet} state={{from}} to={castLink}>Cast</Link>\n                <Link className={s.outlet} state={{from}} to={reviewsLink}>Rewiews</Link>\n                <Outlet />\n            </>)}\n            {error && <p>Failed to upload movies.</p>}\n        </div>\n    )\n}\n\nexport default MovieDetailsView;\n\nMovieDetailsView.defaultProps = {\n    data: [],\n    goBack: () => {},\n    getMoviesById: () => {},\n    fetchMovies: () => {},\n}\n\nMovieDetailsView.propTypes = {\n    id: PropTypes.string,\n    goBack: PropTypes.func,\n    getMoviesById: PropTypes.func,\n    fetchMovies: PropTypes.func,\n}","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n        api_key: 'd2b2f291667f079bc8fdb4687806371b',\n    }\n});\n\nexport const getMovies = async(page = 1) => {\n    const {data} = await instance.get('trending/all/day', {\n        params: {\n            page,\n        }\n    });\n    return data;\n};\n\nexport const getMoviesBySearch = async(page = 1, query) => {\n    const {data} = await instance.get('/search/movie', {\n        params: {\n            page,\n            query,\n        }\n    });\n    return data;\n};\n\nexport const getMoviesById = async(id) => {\n    const {data} = await instance.get(`/movie/${id}`, {\n        params: {\n            language: \"en-US\",\n        }\n    });\n    return data;\n};\n\nexport const getMoviesByCredits = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/credits`, {\n        params: {\n            language: \"en-US\",\n        }\n    });\n    return data;\n};\n\nexport const getMoviesByReviews = async(id) => {\n    const {data} = await instance.get(`/movie/${id}/reviews`, {\n        params: {\n            language: \"en-US\",\n        }\n    });\n    return data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesCard_container__onfvk\",\"movieDetail\":\"MoviesCard_movieDetail__nbfJ4\",\"button\":\"MoviesCard_button__+sHr0\",\"loader\":\"MoviesCard_loader__HM+Rk\",\"img\":\"MoviesCard_img__TGBhC\",\"movieDetailList\":\"MoviesCard_movieDetailList__7jWyk\",\"cast\":\"MoviesCard_cast__2qXTi\",\"castContainer\":\"MoviesCard_castContainer__i7iQ8\",\"outlet\":\"MoviesCard_outlet__7VSOJ\",\"castTitle\":\"MoviesCard_castTitle__f1AqC\",\"castList\":\"MoviesCard_castList__92DAq\",\"reviewsBlock\":\"MoviesCard_reviewsBlock__uA+rt\"};"],"names":["MoviesCard","itemsData","className","s","map","id","poster_path","original_name","original_title","release_date","overview","genres","vote_average","src","alt","name","defaultProps","MovieDetailsView","useState","items","setItems","loading","setLoading","error","setError","useParams","navigate","useNavigate","location","useLocation","from","state","useEffect","fetchMovies","getMoviesById","data","prevItems","castLink","reviewsLink","pathname","onClick","Loader","to","goBack","instance","axios","baseURL","params","api_key","getMovies","page","get","getMoviesBySearch","query","language","getMoviesByCredits","getMoviesByReviews"],"sourceRoot":""}